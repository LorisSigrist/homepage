import{S as Ut,i as Wt,s as Ht,k as i,q as a,a as m,l as s,m as n,r as o,h as r,c,n as l,b as p,D as e,E as ut}from"../chunks/index.ce036af0.js";function qt(Mt){let _,Z,me,$,f,ce,g,ve,be,y,_e,ge,k,ye,ke,j,ze,Ee,z,we,De,E,xe,Ie,ee,M,Ae,te,S,U,Re,re,u,Be,W,Ce,Oe,Q,Pe,Se,V,Te,Le,X,Ze,je,ae,H,Me,oe,v,T,w,Ue,We,q,He,qe,F,D,Fe,Ge,Ke,G,x,Ye,Je,Ne,K,I,Qe,Ve,le,L,Y,Xe,ie,J,$e,se,A,et,R,tt,rt,ne,B,at,N,ot,lt,he,C,it,O,st,nt;return{c(){_=i("h1"),Z=i("a"),me=a("Zod Driven Development"),$=m(),f=i("p"),ce=a("Over the last year we’ve been seing "),g=i("a"),ve=a("zod"),be=a(", a schema validation library, grow into the lingua franca of many tools. From "),y=i("a"),_e=a("trpc"),ge=a(", to "),k=i("a"),ye=a("SvelteKit Superforms"),ke=a(", even "),j=i("abbr"),ze=a("ORMs"),Ee=a(" like "),z=i("a"),we=a("drizzle"),De=a(". I myself have contributed to this trend with "),E=i("a"),xe=a("zocker"),Ie=a(", a mock-data generator that uses zod schemas to generate mock data."),ee=m(),M=i("p"),Ae=a("This got me thinking. How far can I push this? Could I generate an entire app from a zod schema? This article documents my experiment."),te=m(),S=i("h2"),U=i("a"),Re=a("The Goalpost and how to get there"),re=m(),u=i("p"),Be=a("Since this is a toy project, I’m going to keep the scope limited to a "),W=i("abbr"),Ce=a("CRUD"),Oe=a(" app with multiple entities. Let’s build a library app. We’ll have "),Q=i("code"),Pe=a("Books"),Se=a(", "),V=i("code"),Te=a("Authors"),Le=a(" and "),X=i("code"),Ze=a("Publishers"),je=a(". Each book has one author and one publisher. Each author can have multiple books. Each publisher can have multiple books."),ae=m(),H=i("p"),Me=a("We will be using the following tools:"),oe=m(),v=i("ul"),T=i("li"),w=i("a"),Ue=a("drizzle"),We=a(" as the "),q=i("abbr"),He=a("ORM"),qe=m(),F=i("li"),D=i("a"),Fe=a("drizzle-zod"),Ge=a(", a first party way to generate the zod schemas from drizzle models"),Ke=m(),G=i("li"),x=i("a"),Ye=a("sveltekit superforms"),Je=a(" to generate and validate forms from the zod schemas"),Ne=m(),K=i("li"),I=i("a"),Qe=a("sveltekit"),Ve=a(" as the application framework"),le=m(),L=i("h2"),Y=i("a"),Xe=a("Conclusion"),ie=m(),J=i("p"),$e=a("Zod Driven Development has some very obvious strengths. Development speed and maintainability. But, once more complexity get’s added, such as authorization, complex business logic, and more complex relationships, it starts to struggle."),se=m(),A=i("p"),et=a("Earlier iterations of similar ideas, such as model-driven development, have caused many development failures when the complexity of the projects grew beyond the capabilities of the tool. "),R=i("a"),tt=a("healthcare.gov"),rt=a(" is a prime example of this."),ne=m(),B=i("p"),at=a("Fortunately, "),N=i("abbr"),ot=a("ZDD"),lt=a(" is not an all or nothing approach. You can use this for the trivial parts of your app, and write the more complex parts the way you usually would. It only gets dangerous if your tooling grows more complex than the app itself."),he=m(),C=i("p"),it=a("While I likely won’t be generating entire apps like this, I will certainly add some of these tools to my toolkit. The form-generation & validation, the automagic UI, and the mock-data generation have all been fantastic to work with. "),O=i("a"),st=a("Drizzle"),nt=a(" is not quite there yet, but it’s evolving fast and I’m excited to see where it goes."),this.h()},l(t){_=s(t,"H1",{id:!0});var h=n(_);Z=s(h,"A",{href:!0});var dt=n(Z);me=o(dt,"Zod Driven Development"),dt.forEach(r),h.forEach(r),$=c(t),f=s(t,"P",{});var d=n(f);ce=o(d,"Over the last year we’ve been seing "),g=s(d,"A",{href:!0,rel:!0,target:!0});var mt=n(g);ve=o(mt,"zod"),mt.forEach(r),be=o(d,", a schema validation library, grow into the lingua franca of many tools. From "),y=s(d,"A",{href:!0,rel:!0,target:!0});var ct=n(y);_e=o(ct,"trpc"),ct.forEach(r),ge=o(d,", to "),k=s(d,"A",{href:!0,rel:!0,target:!0});var vt=n(k);ye=o(vt,"SvelteKit Superforms"),vt.forEach(r),ke=o(d,", even "),j=s(d,"ABBR",{title:!0});var bt=n(j);ze=o(bt,"ORMs"),bt.forEach(r),Ee=o(d," like "),z=s(d,"A",{href:!0,rel:!0,target:!0});var _t=n(z);we=o(_t,"drizzle"),_t.forEach(r),De=o(d,". I myself have contributed to this trend with "),E=s(d,"A",{href:!0,rel:!0,target:!0});var gt=n(E);xe=o(gt,"zocker"),gt.forEach(r),Ie=o(d,", a mock-data generator that uses zod schemas to generate mock data."),d.forEach(r),ee=c(t),M=s(t,"P",{});var yt=n(M);Ae=o(yt,"This got me thinking. How far can I push this? Could I generate an entire app from a zod schema? This article documents my experiment."),yt.forEach(r),te=c(t),S=s(t,"H2",{id:!0});var kt=n(S);U=s(kt,"A",{href:!0});var zt=n(U);Re=o(zt,"The Goalpost and how to get there"),zt.forEach(r),kt.forEach(r),re=c(t),u=s(t,"P",{});var b=n(u);Be=o(b,"Since this is a toy project, I’m going to keep the scope limited to a "),W=s(b,"ABBR",{title:!0});var Et=n(W);Ce=o(Et,"CRUD"),Et.forEach(r),Oe=o(b," app with multiple entities. Let’s build a library app. We’ll have "),Q=s(b,"CODE",{});var wt=n(Q);Pe=o(wt,"Books"),wt.forEach(r),Se=o(b,", "),V=s(b,"CODE",{});var Dt=n(V);Te=o(Dt,"Authors"),Dt.forEach(r),Le=o(b," and "),X=s(b,"CODE",{});var xt=n(X);Ze=o(xt,"Publishers"),xt.forEach(r),je=o(b,". Each book has one author and one publisher. Each author can have multiple books. Each publisher can have multiple books."),b.forEach(r),ae=c(t),H=s(t,"P",{});var It=n(H);Me=o(It,"We will be using the following tools:"),It.forEach(r),oe=c(t),v=s(t,"UL",{});var P=n(v);T=s(P,"LI",{});var pe=n(T);w=s(pe,"A",{href:!0,rel:!0,target:!0});var At=n(w);Ue=o(At,"drizzle"),At.forEach(r),We=o(pe," as the "),q=s(pe,"ABBR",{title:!0});var Rt=n(q);He=o(Rt,"ORM"),Rt.forEach(r),pe.forEach(r),qe=c(P),F=s(P,"LI",{});var ht=n(F);D=s(ht,"A",{href:!0,rel:!0,target:!0});var Bt=n(D);Fe=o(Bt,"drizzle-zod"),Bt.forEach(r),Ge=o(ht,", a first party way to generate the zod schemas from drizzle models"),ht.forEach(r),Ke=c(P),G=s(P,"LI",{});var pt=n(G);x=s(pt,"A",{href:!0,rel:!0,target:!0});var Ct=n(x);Ye=o(Ct,"sveltekit superforms"),Ct.forEach(r),Je=o(pt," to generate and validate forms from the zod schemas"),pt.forEach(r),Ne=c(P),K=s(P,"LI",{});var ft=n(K);I=s(ft,"A",{href:!0,rel:!0,target:!0});var Ot=n(I);Qe=o(Ot,"sveltekit"),Ot.forEach(r),Ve=o(ft," as the application framework"),ft.forEach(r),P.forEach(r),le=c(t),L=s(t,"H2",{id:!0});var Pt=n(L);Y=s(Pt,"A",{href:!0});var St=n(Y);Xe=o(St,"Conclusion"),St.forEach(r),Pt.forEach(r),ie=c(t),J=s(t,"P",{});var Tt=n(J);$e=o(Tt,"Zod Driven Development has some very obvious strengths. Development speed and maintainability. But, once more complexity get’s added, such as authorization, complex business logic, and more complex relationships, it starts to struggle."),Tt.forEach(r),se=c(t),A=s(t,"P",{});var fe=n(A);et=o(fe,"Earlier iterations of similar ideas, such as model-driven development, have caused many development failures when the complexity of the projects grew beyond the capabilities of the tool. "),R=s(fe,"A",{href:!0,rel:!0,target:!0});var Lt=n(R);tt=o(Lt,"healthcare.gov"),Lt.forEach(r),rt=o(fe," is a prime example of this."),fe.forEach(r),ne=c(t),B=s(t,"P",{});var ue=n(B);at=o(ue,"Fortunately, "),N=s(ue,"ABBR",{title:!0});var Zt=n(N);ot=o(Zt,"ZDD"),Zt.forEach(r),lt=o(ue," is not an all or nothing approach. You can use this for the trivial parts of your app, and write the more complex parts the way you usually would. It only gets dangerous if your tooling grows more complex than the app itself."),ue.forEach(r),he=c(t),C=s(t,"P",{});var de=n(C);it=o(de,"While I likely won’t be generating entire apps like this, I will certainly add some of these tools to my toolkit. The form-generation & validation, the automagic UI, and the mock-data generation have all been fantastic to work with. "),O=s(de,"A",{href:!0,rel:!0,target:!0});var jt=n(O);st=o(jt,"Drizzle"),jt.forEach(r),nt=o(de," is not quite there yet, but it’s evolving fast and I’m excited to see where it goes."),de.forEach(r),this.h()},h(){l(Z,"href","#zod-driven-development"),l(_,"id","zod-driven-development"),l(g,"href","https://zod.dev"),l(g,"rel","noopener noreferrer"),l(g,"target","_blank"),l(y,"href","https://trpc.io/"),l(y,"rel","noopener noreferrer"),l(y,"target","_blank"),l(k,"href","https://superforms.rocks/"),l(k,"rel","noopener noreferrer"),l(k,"target","_blank"),l(j,"title","Object Relational Mappers"),l(z,"href","https://orm.drizzle.team/"),l(z,"rel","noopener noreferrer"),l(z,"target","_blank"),l(E,"href","https://zocker.sigrist.dev"),l(E,"rel","noopener noreferrer"),l(E,"target","_blank"),l(U,"href","#the-goalpost-and-how-to-get-there"),l(S,"id","the-goalpost-and-how-to-get-there"),l(W,"title","Create Read Update Delete"),l(w,"href","https://orm.drizzle.team/"),l(w,"rel","noopener noreferrer"),l(w,"target","_blank"),l(q,"title","Object Relational Mapper"),l(D,"href","https://orm.drizzle.team/docs/zod"),l(D,"rel","noopener noreferrer"),l(D,"target","_blank"),l(x,"href","https://superforms.rocks/"),l(x,"rel","noopener noreferrer"),l(x,"target","_blank"),l(I,"href","https://kit.svelte.dev/"),l(I,"rel","noopener noreferrer"),l(I,"target","_blank"),l(Y,"href","#conclusion"),l(L,"id","conclusion"),l(R,"href","https://healthcare.gov"),l(R,"rel","noopener noreferrer"),l(R,"target","_blank"),l(N,"title","Zod Driven Development"),l(O,"href","https://orm.drizzle.team/"),l(O,"rel","noopener noreferrer"),l(O,"target","_blank")},m(t,h){p(t,_,h),e(_,Z),e(Z,me),p(t,$,h),p(t,f,h),e(f,ce),e(f,g),e(g,ve),e(f,be),e(f,y),e(y,_e),e(f,ge),e(f,k),e(k,ye),e(f,ke),e(f,j),e(j,ze),e(f,Ee),e(f,z),e(z,we),e(f,De),e(f,E),e(E,xe),e(f,Ie),p(t,ee,h),p(t,M,h),e(M,Ae),p(t,te,h),p(t,S,h),e(S,U),e(U,Re),p(t,re,h),p(t,u,h),e(u,Be),e(u,W),e(W,Ce),e(u,Oe),e(u,Q),e(Q,Pe),e(u,Se),e(u,V),e(V,Te),e(u,Le),e(u,X),e(X,Ze),e(u,je),p(t,ae,h),p(t,H,h),e(H,Me),p(t,oe,h),p(t,v,h),e(v,T),e(T,w),e(w,Ue),e(T,We),e(T,q),e(q,He),e(v,qe),e(v,F),e(F,D),e(D,Fe),e(F,Ge),e(v,Ke),e(v,G),e(G,x),e(x,Ye),e(G,Je),e(v,Ne),e(v,K),e(K,I),e(I,Qe),e(K,Ve),p(t,le,h),p(t,L,h),e(L,Y),e(Y,Xe),p(t,ie,h),p(t,J,h),e(J,$e),p(t,se,h),p(t,A,h),e(A,et),e(A,R),e(R,tt),e(A,rt),p(t,ne,h),p(t,B,h),e(B,at),e(B,N),e(N,ot),e(B,lt),p(t,he,h),p(t,C,h),e(C,it),e(C,O),e(O,st),e(C,nt)},p:ut,i:ut,o:ut,d(t){t&&r(_),t&&r($),t&&r(f),t&&r(ee),t&&r(M),t&&r(te),t&&r(S),t&&r(re),t&&r(u),t&&r(ae),t&&r(H),t&&r(oe),t&&r(v),t&&r(le),t&&r(L),t&&r(ie),t&&r(J),t&&r(se),t&&r(A),t&&r(ne),t&&r(B),t&&r(he),t&&r(C)}}}class Gt extends Ut{constructor(_){super(),Wt(this,_,null,qt,Ht,{})}}export{Gt as component};
