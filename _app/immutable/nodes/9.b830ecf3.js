import{S as bs,i as Ts,s as _s,k as l,q as p,a as f,l as c,m as i,r as e,h as a,c as d,n as B,b as o,G as n,H as es}from"../chunks/index.fae6157f.js";function Es(ds){let k,y,L,A,g,R,E,W,Y,D,w,G,H,r,z,I,F,J,j,K,N,S,h,hs=`<code class="language-svelte"><span class="token comment">&lt;!--Tooltip.svelte--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createTooltip <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@melt-ui/svelte'</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">elements</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> trigger<span class="token punctuation">,</span> content<span class="token punctuation">,</span> arrow <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> open <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">createTooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>trigger<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>

<span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> open<span class="token punctuation">&#125;</span></span>
  ...
<span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span>

<span class="token comment">&lt;!--App.svelte--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> Tooltip <span class="token keyword">from</span> <span class="token string">'./Tooltip.svelte'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tooltip</span> <span class="token attr-name"><span class="token namespace">let:</span>trigger</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">use:</span>trigger</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>$trigger<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Do Something<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tooltip</span><span class="token punctuation">></span></span></code>`,x,u,Q,P,V,X,M,Z,ss,U,as,ns,C,v,vs=`<code class="language-svelte"><span class="token comment">&lt;!--Tooltip.svelte--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createTooltip <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@melt-ui/svelte'</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">elements</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> trigger<span class="token punctuation">,</span> content<span class="token punctuation">,</span> arrow <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> open <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">createTooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">triggerAction=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>trigger<span class="token punctuation">&#125;</span></span> <span class="token attr-name">triggerProps=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>$trigger<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>

<span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> open<span class="token punctuation">&#125;</span></span>
  ...
<span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span>

<span class="token comment">&lt;!--App.svelte--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> Tooltip <span class="token keyword">from</span> <span class="token string">'./Tooltip.svelte'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tooltip</span> <span class="token attr-name"><span class="token namespace">let:</span>triggerAction</span> <span class="token attr-name"><span class="token namespace">let:</span>triggerProps</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">use:</span>triggerAction</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>triggerProps<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Do Something<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tooltip</span><span class="token punctuation">></span></span></code>`,q,b,ts,O,T,ps;return{c(){k=l("h1"),y=l("a"),L=p("A neat pattern for Melt UI"),A=f(),g=l("p"),R=p("While working with Melt UI, I’ve stumbled upon a pattern that has been quite handy several times. Sharing stuff from the same builder between components using the "),E=l("code"),W=p("let:"),Y=p(" directive. Here is an example:"),D=f(),w=l("p"),G=p("I often find myself in the need for a generic Tooltip component, one where the Trigger is some outside object. Since I use Melt UI for my projects anyway, I really want to use it’s Tooltip builder. However, it’s not immediately obvious how you can do that. Melt UI’s docs always have one component that fully encapsulates all the behavior."),H=f(),r=l("p"),z=p("But it’s actually quite doable thanks to the "),I=l("code"),F=p("let:"),J=p(" directive. You can use it to pass the Tooltip’s "),j=l("code"),K=p("trigger"),N=p(" prop to the outside world. Ideally this would be as simple as:"),S=f(),h=l("pre"),x=f(),u=l("p"),Q=p("Unfortunately, this doesn’t work as of now. The problem is the "),P=l("code"),V=p("{...$trigger}"),X=p(" part. It’s not possible to bind to a store unless it comes from the component’s script tag. The workaround here is to bind the store inside the "),M=l("code"),Z=p("Tooltip"),ss=p(" component and pass it to the "),U=l("code"),as=p("trigger"),ns=p(" slot."),C=f(),v=l("pre"),q=f(),b=l("p"),ts=p("That’s it."),O=f(),T=l("p"),ps=p("This pattern is has been useful to me a couple times so I wanted to share."),this.h()},l(s){k=c(s,"H1",{id:!0});var t=i(k);y=c(t,"A",{href:!0});var os=i(y);L=e(os,"A neat pattern for Melt UI"),os.forEach(a),t.forEach(a),A=d(s),g=c(s,"P",{});var $=i(g);R=e($,"While working with Melt UI, I’ve stumbled upon a pattern that has been quite handy several times. Sharing stuff from the same builder between components using the "),E=c($,"CODE",{});var ls=i(E);W=e(ls,"let:"),ls.forEach(a),Y=e($," directive. Here is an example:"),$.forEach(a),D=d(s),w=c(s,"P",{});var cs=i(w);G=e(cs,"I often find myself in the need for a generic Tooltip component, one where the Trigger is some outside object. Since I use Melt UI for my projects anyway, I really want to use it’s Tooltip builder. However, it’s not immediately obvious how you can do that. Melt UI’s docs always have one component that fully encapsulates all the behavior."),cs.forEach(a),H=d(s),r=c(s,"P",{});var _=i(r);z=e(_,"But it’s actually quite doable thanks to the "),I=c(_,"CODE",{});var is=i(I);F=e(is,"let:"),is.forEach(a),J=e(_," directive. You can use it to pass the Tooltip’s "),j=c(_,"CODE",{});var us=i(j);K=e(us,"trigger"),us.forEach(a),N=e(_," prop to the outside world. Ideally this would be as simple as:"),_.forEach(a),S=d(s),h=c(s,"PRE",{class:!0});var ys=i(h);ys.forEach(a),x=d(s),u=c(s,"P",{});var m=i(u);Q=e(m,"Unfortunately, this doesn’t work as of now. The problem is the "),P=c(m,"CODE",{});var rs=i(P);V=e(rs,"{...$trigger}"),rs.forEach(a),X=e(m," part. It’s not possible to bind to a store unless it comes from the component’s script tag. The workaround here is to bind the store inside the "),M=c(m,"CODE",{});var ks=i(M);Z=e(ks,"Tooltip"),ks.forEach(a),ss=e(m," component and pass it to the "),U=c(m,"CODE",{});var gs=i(U);as=e(gs,"trigger"),gs.forEach(a),ns=e(m," slot."),m.forEach(a),C=d(s),v=c(s,"PRE",{class:!0});var ws=i(v);ws.forEach(a),q=d(s),b=c(s,"P",{});var ms=i(b);ts=e(ms,"That’s it."),ms.forEach(a),O=d(s),T=c(s,"P",{});var fs=i(T);ps=e(fs,"This pattern is has been useful to me a couple times so I wanted to share."),fs.forEach(a),this.h()},h(){B(y,"href","#a-neat-pattern-for-melt-ui"),B(k,"id","a-neat-pattern-for-melt-ui"),B(h,"class","language-svelte"),B(v,"class","language-svelte")},m(s,t){o(s,k,t),n(k,y),n(y,L),o(s,A,t),o(s,g,t),n(g,R),n(g,E),n(E,W),n(g,Y),o(s,D,t),o(s,w,t),n(w,G),o(s,H,t),o(s,r,t),n(r,z),n(r,I),n(I,F),n(r,J),n(r,j),n(j,K),n(r,N),o(s,S,t),o(s,h,t),h.innerHTML=hs,o(s,x,t),o(s,u,t),n(u,Q),n(u,P),n(P,V),n(u,X),n(u,M),n(M,Z),n(u,ss),n(u,U),n(U,as),n(u,ns),o(s,C,t),o(s,v,t),v.innerHTML=vs,o(s,q,t),o(s,b,t),n(b,ts),o(s,O,t),o(s,T,t),n(T,ps)},p:es,i:es,o:es,d(s){s&&a(k),s&&a(A),s&&a(g),s&&a(D),s&&a(w),s&&a(H),s&&a(r),s&&a(S),s&&a(h),s&&a(x),s&&a(u),s&&a(C),s&&a(v),s&&a(q),s&&a(b),s&&a(O),s&&a(T)}}}class js extends bs{constructor(k){super(),Ts(this,k,null,Es,_s,{})}}export{js as component};
