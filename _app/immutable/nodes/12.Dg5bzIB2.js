import{s as j,n as T}from"../chunks/scheduler.IgQUtjbl.js";import{S as $,i as G,g as A,s as p,H as P,h as F,C as D,c as t,G as L,k as W,a,f as l}from"../chunks/index.BUVdxXQj.js";function Y(q){let e,b='<a href="#a-neat-pattern-for-melt-ui">A neat pattern for Melt UI</a>',u,o,w="While working with Melt UI, I’ve stumbled upon a pattern that has been quite handy several times. Sharing stuff from the same builder between components using the <code>let:</code> directive. Here is an example:",d,c,_="I often find myself in the need for a generic Tooltip component, one where the Trigger is some outside object. Since I use Melt UI for my projects anyway, I really want to use it’s Tooltip builder. However, it’s not immediately obvious how you can do that. Melt UI’s docs always have one component that fully encapsulates all the behavior.",h,r,H="But it’s actually quite doable thanks to the <code>let:</code> directive. You can use it to pass the Tooltip’s <code>trigger</code> prop to the outside world. Ideally this would be as simple as:",x,E,S=`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#767C9DB0;font-style:italic">&#x3C;!--Tooltip.svelte--></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#5DE4C7">    import </span><span style="color:#A6ACCD">&#123;</span><span style="color:#ADD7FF"> createTooltip</span><span style="color:#A6ACCD"> &#125;</span><span style="color:#A6ACCD"> from</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">@melt-ui/svelte</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">    const</span><span style="color:#A6ACCD"> &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">    elements: &#123; </span><span style="color:#E4F0FB">trigger</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">content</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">arrow</span><span style="color:#A6ACCD"> &#125;,</span></span>
<span class="line"><span style="color:#A6ACCD">    states: &#123; </span><span style="color:#E4F0FB">open</span><span style="color:#A6ACCD"> &#125;,</span></span>
<span class="line"><span style="color:#A6ACCD">  &#125; </span><span style="color:#91B4D5">=</span><span style="color:#E4F0FBD0"> createTooltip</span><span style="color:#A6ACCD">();</span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#A6ACCD">slot</span><span style="color:#91B4D5;font-style:italic"> &#123;</span><span style="color:#E4F0FB">trigger</span><span style="color:#91B4D5;font-style:italic">&#125;</span><span style="color:#E4F0FB"> /></span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">&#123;#if </span><span style="color:#E4F0FB">open</span><span style="color:#A6ACCD">&#125;</span></span>
<span class="line"><span style="color:#A6ACCD">  ...</span></span>
<span class="line"><span style="color:#A6ACCD">&#123;/if&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic">&#x3C;!--App.svelte--></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#5DE4C7">    import </span><span style="color:#ADD7FF">Tooltip</span><span style="color:#A6ACCD"> from</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">./Tooltip.svelte</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">Tooltip</span><span style="color:#91B4D5"> let</span><span style="color:#A6ACCD">:</span><span style="color:#E4F0FB">trigger></span></span>
<span class="line"><span style="color:#E4F0FB">  &#x3C;</span><span style="color:#5DE4C7">button</span><span style="color:#A6ACCD"> use:</span><span style="color:#E4F0FBD0">trigger</span><span style="color:#91B4D5;font-style:italic"> &#123;</span><span style="color:#91B4D5">...</span><span style="color:#E4F0FB">$trigger</span><span style="color:#91B4D5;font-style:italic">&#125;</span><span style="color:#E4F0FB">></span><span style="color:#A6ACCD">Do Something</span><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">button</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">Tooltip</span><span style="color:#E4F0FB">></span></span></code></pre>`,B,i,M="Unfortunately, this doesn’t work as of now. The problem is the <code>{...$trigger}</code> part. It’s not possible to bind to a store unless it comes from the component’s script tag. The workaround here is to bind the store inside the <code>Tooltip</code> component and pass it to the <code>trigger</code> slot.",g,m,U=`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#767C9DB0;font-style:italic">&#x3C;!--Tooltip.svelte--></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#5DE4C7">    import </span><span style="color:#A6ACCD">&#123;</span><span style="color:#ADD7FF"> createTooltip</span><span style="color:#A6ACCD"> &#125;</span><span style="color:#A6ACCD"> from</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">@melt-ui/svelte</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">    const</span><span style="color:#A6ACCD"> &#123;</span></span>
<span class="line"><span style="color:#A6ACCD">    elements: &#123; </span><span style="color:#E4F0FB">trigger</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">content</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">arrow</span><span style="color:#A6ACCD"> &#125;,</span></span>
<span class="line"><span style="color:#A6ACCD">    states: &#123; </span><span style="color:#E4F0FB">open</span><span style="color:#A6ACCD"> &#125;,</span></span>
<span class="line"><span style="color:#A6ACCD">  &#125; </span><span style="color:#91B4D5">=</span><span style="color:#E4F0FBD0"> createTooltip</span><span style="color:#A6ACCD">();</span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#A6ACCD">slot</span><span style="color:#91B4D5;font-style:italic"> triggerAction</span><span style="color:#A6ACCD">=</span><span style="color:#E4F0FB">&#123;trigger&#125; </span><span style="color:#91B4D5;font-style:italic">triggerProps</span><span style="color:#A6ACCD">=</span><span style="color:#E4F0FB">&#123;</span><span style="color:#A6ACCD">$</span><span style="color:#E4F0FB">trigger&#125; /></span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD">&#123;#if </span><span style="color:#E4F0FB">open</span><span style="color:#A6ACCD">&#125;</span></span>
<span class="line"><span style="color:#A6ACCD">  ...</span></span>
<span class="line"><span style="color:#A6ACCD">&#123;/if&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic">&#x3C;!--App.svelte--></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#5DE4C7">    import </span><span style="color:#ADD7FF">Tooltip</span><span style="color:#A6ACCD"> from</span><span style="color:#A6ACCD"> '</span><span style="color:#5DE4C7">./Tooltip.svelte</span><span style="color:#A6ACCD">'</span><span style="color:#A6ACCD">;</span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">script</span><span style="color:#E4F0FB">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;</span><span style="color:#5DE4C7">Tooltip</span><span style="color:#91B4D5"> let</span><span style="color:#A6ACCD">:</span><span style="color:#E4F0FB">triggerAction </span><span style="color:#91B4D5">let</span><span style="color:#A6ACCD">:</span><span style="color:#E4F0FB">triggerProps></span></span>
<span class="line"><span style="color:#E4F0FB">  &#x3C;</span><span style="color:#5DE4C7">button</span><span style="color:#A6ACCD"> use:</span><span style="color:#E4F0FBD0">triggerAction</span><span style="color:#91B4D5;font-style:italic"> &#123;</span><span style="color:#91B4D5">...</span><span style="color:#E4F0FB">triggerProps</span><span style="color:#91B4D5;font-style:italic">&#125;</span><span style="color:#E4F0FB">></span><span style="color:#A6ACCD">Do Something</span><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">button</span><span style="color:#E4F0FB">></span></span>
<span class="line"><span style="color:#E4F0FB">&#x3C;/</span><span style="color:#5DE4C7">Tooltip</span><span style="color:#E4F0FB">></span></span></code></pre>`,f,y,I="That’s it.",v,C,k="This pattern is has been useful to me a couple times so I wanted to share.";return{c(){e=A("h1"),e.innerHTML=b,u=p(),o=A("p"),o.innerHTML=w,d=p(),c=A("p"),c.textContent=_,h=p(),r=A("p"),r.innerHTML=H,x=p(),E=new P(!1),B=p(),i=A("p"),i.innerHTML=M,g=p(),m=new P(!1),f=p(),y=A("p"),y.textContent=I,v=p(),C=A("p"),C.textContent=k,this.h()},l(s){e=F(s,"H1",{id:!0,"data-svelte-h":!0}),D(e)!=="svelte-15fqgkm"&&(e.innerHTML=b),u=t(s),o=F(s,"P",{"data-svelte-h":!0}),D(o)!=="svelte-we6q8g"&&(o.innerHTML=w),d=t(s),c=F(s,"P",{"data-svelte-h":!0}),D(c)!=="svelte-sm233c"&&(c.textContent=_),h=t(s),r=F(s,"P",{"data-svelte-h":!0}),D(r)!=="svelte-fb05oo"&&(r.innerHTML=H),x=t(s),E=L(s,!1),B=t(s),i=F(s,"P",{"data-svelte-h":!0}),D(i)!=="svelte-qcbyx"&&(i.innerHTML=M),g=t(s),m=L(s,!1),f=t(s),y=F(s,"P",{"data-svelte-h":!0}),D(y)!=="svelte-jwgito"&&(y.textContent=I),v=t(s),C=F(s,"P",{"data-svelte-h":!0}),D(C)!=="svelte-1hcs8n2"&&(C.textContent=k),this.h()},h(){W(e,"id","a-neat-pattern-for-melt-ui"),E.a=B,m.a=f},m(s,n){a(s,e,n),a(s,u,n),a(s,o,n),a(s,d,n),a(s,c,n),a(s,h,n),a(s,r,n),a(s,x,n),E.m(S,s,n),a(s,B,n),a(s,i,n),a(s,g,n),m.m(U,s,n),a(s,f,n),a(s,y,n),a(s,v,n),a(s,C,n)},p:T,i:T,o:T,d(s){s&&(l(e),l(u),l(o),l(d),l(c),l(h),l(r),l(x),E.d(),l(B),l(i),l(g),m.d(),l(f),l(y),l(v),l(C))}}}class K extends ${constructor(e){super(),G(this,e,null,Y,j,{})}}export{K as component};
